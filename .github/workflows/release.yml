name: Publish Hub
on:
  release:
    types: [published]
jobs:
  publish:
    name: Publish to PyPI and Docker Hub
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r hub/requirements/common.txt
          pip install -r hub/requirements/tests.txt
          pip install -r hub/requirements/plugins.txt
      - name: Replace the bugout token with production value
        run: echo 'BUGOUT_TOKEN = "95402265-76b1-4898-985a-5be9403b92e1"' > hub/util/bugout_token_production.py
      - name: Prints normalized version
        run: python setup.py version
      - name: Create a source distribution & wheel
        run: |
          python3 setup.py sdist
          python3 setup.py bdist_wheel
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set tag name as environment variable
        run: |
              echo "VERSION_PUBLISHED=$(echo $GITHUB_REF | sed 's/refs\/tags\/v/activeloop\/hub:/g')" >> $GITHUB_ENV
      - name: Publish distribution to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: bin/Dockerfile
          push: true
          tags: ${{ env.VERSION_PUBLISHED }}
      # - name: Install Miniconda
      #   uses: conda-incubator/setup-miniconda@v2
      #   with:
      #     auto-update-conda: true
      #     python-version: 3.8
      # - name: Publish to Conda
      #   run: |
      #     export VERSION_ON_PYPI=$(echo $GITHUB_REF | sed 's/refs\/tags\/v//g')
      #     cp .github/conda-template.yaml meta.yaml
      #     sed -i "s|REPLACE_VERSION|$VERSION_ON_PYPI|g" meta.yaml
      #     cat meta.yaml
      #     conda install conda-build anaconda-client patch -y
      #     conda config --add channels conda-forge
      #     conda config --set anaconda_upload yes
      #     pip install -e .
      #     conda build .
